/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package universidad_grupo_63.vistas;

import java.awt.Color;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import universidad_grupo_63.accesoADatos.AlumnoData;
import universidad_grupo_63.accesoADatos.InscripcionData;
import universidad_grupo_63.accesoADatos.MateriaData;
import universidad_grupo_63.entidades.Alumno;
import universidad_grupo_63.entidades.Inscripcion;
import universidad_grupo_63.entidades.Materia;

/**
 *
 * @author USUARIO
 */
public class Inscripciones extends javax.swing.JPanel {

    MateriaData materiaData = new MateriaData();
    AlumnoData alumnoData = new AlumnoData();
    InscripcionData inscripcionData = new InscripcionData();

    boolean InscApretado = false;
    boolean noInscApretado = false;

    /**
     * Creates new form AgregarAlumno
     */
    private DefaultTableModel modeloTablaAlumnos = new DefaultTableModel() {
        public boolean isCellEditable(int fila, int columna) {
            return false;
        }
    };
    private DefaultTableModel modeloTablaMateria = new DefaultTableModel() {
        public boolean isCellEditable(int fila, int columna) {
            return columna == 3;
        }
    };

    public Inscripciones() {
        initComponents();
        armarCabeceraMaterias();
        armarCabeceraAlumnos();
        cargarTablaAlumnos();
        btnInscribir.setVisible(false);
        btnAnularInscripcion.setVisible(false);
        btnGuardarNota.setVisible(false);
        jTextFieldNota.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        btnInscriptas = new javax.swing.JLabel();
        btnNoInscriptas = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableMaterias = new javax.swing.JTable();
        btnInscribir = new javax.swing.JLabel();
        btnAnularInscripcion = new javax.swing.JLabel();
        btnGuardarNota = new javax.swing.JLabel();
        jTextFieldNota = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableAlumnos = new javax.swing.JTable();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(970, 520));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(226, 240, 251));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setPreferredSize(new java.awt.Dimension(286, 322));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnInscriptas.setBackground(new java.awt.Color(90, 184, 233));
        btnInscriptas.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnInscriptas.setForeground(new java.awt.Color(255, 255, 255));
        btnInscriptas.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnInscriptas.setText("INSCRIPTAS");
        btnInscriptas.setOpaque(true);
        btnInscriptas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnInscriptasMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnInscriptasMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnInscriptasMouseExited(evt);
            }
        });
        jPanel3.add(btnInscriptas, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 10, 150, 30));

        btnNoInscriptas.setBackground(new java.awt.Color(90, 184, 233));
        btnNoInscriptas.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnNoInscriptas.setForeground(new java.awt.Color(255, 255, 255));
        btnNoInscriptas.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnNoInscriptas.setText("NO INSCRIPTAS");
        btnNoInscriptas.setOpaque(true);
        btnNoInscriptas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnNoInscriptasMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnNoInscriptasMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnNoInscriptasMouseExited(evt);
            }
        });
        jPanel3.add(btnNoInscriptas, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 10, 150, 30));

        jTableMaterias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableMaterias.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jTableMaterias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMateriasMouseClicked(evt);
            }
        });
        jTableMaterias.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTableMateriasPropertyChange(evt);
            }
        });
        jScrollPane2.setViewportView(jTableMaterias);

        jPanel3.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 50, 650, 120));

        btnInscribir.setBackground(new java.awt.Color(90, 184, 233));
        btnInscribir.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnInscribir.setForeground(new java.awt.Color(255, 255, 255));
        btnInscribir.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnInscribir.setText("INSCRIBIR");
        btnInscribir.setOpaque(true);
        btnInscribir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnInscribirMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnInscribirMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnInscribirMouseExited(evt);
            }
        });
        jPanel3.add(btnInscribir, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 180, 210, 30));

        btnAnularInscripcion.setBackground(new java.awt.Color(90, 184, 233));
        btnAnularInscripcion.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnAnularInscripcion.setForeground(new java.awt.Color(255, 255, 255));
        btnAnularInscripcion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnAnularInscripcion.setText("ANULAR INSCRIPCION");
        btnAnularInscripcion.setOpaque(true);
        btnAnularInscripcion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAnularInscripcionMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAnularInscripcionMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAnularInscripcionMouseExited(evt);
            }
        });
        jPanel3.add(btnAnularInscripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 180, 210, 30));

        btnGuardarNota.setBackground(new java.awt.Color(90, 184, 233));
        btnGuardarNota.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnGuardarNota.setForeground(new java.awt.Color(255, 255, 255));
        btnGuardarNota.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnGuardarNota.setText("ACTUALIZAR NOTA");
        btnGuardarNota.setOpaque(true);
        btnGuardarNota.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnGuardarNotaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnGuardarNotaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnGuardarNotaMouseExited(evt);
            }
        });
        jPanel3.add(btnGuardarNota, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 220, 190, 30));

        jTextFieldNota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNotaActionPerformed(evt);
            }
        });
        jTextFieldNota.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldNotaKeyTyped(evt);
            }
        });
        jPanel3.add(jTextFieldNota, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 220, 90, 30));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 240, 840, 270));

        jPanel4.setBackground(new java.awt.Color(226, 240, 251));
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel1.setText("Alumnos");

        jTableAlumnos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableAlumnos.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jTableAlumnos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableAlumnosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableAlumnos);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 648, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(376, 376, 376)
                        .addComponent(jLabel1)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 10, 841, 220));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnInscriptasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnInscriptasMouseClicked

        InscApretado = true;
        noInscApretado = false;

        if (InscApretado) {
            btnInscriptas.setBackground(Color.blue);
            btnNoInscriptas.setBackground(Color.decode("#5AB8E9"));
        }

        int filaSeleccionada = jTableAlumnos.getSelectedRow();
        if (filaSeleccionada != -1) {
            cargarTablaMateriasCursadas(extraerIdAlumnoDeTabla());
            btnInscribir.setVisible(false);
            btnAnularInscripcion.setVisible(true);
            btnGuardarNota.setVisible(true);
            jTextFieldNota.setVisible(true);

        }

    }//GEN-LAST:event_btnInscriptasMouseClicked

    private void btnNoInscriptasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNoInscriptasMouseClicked

        noInscApretado = true;
        InscApretado = false;

        if (noInscApretado) {
            btnNoInscriptas.setBackground(Color.blue);
            btnInscriptas.setBackground(Color.decode("#5AB8E9"));
        }

        int filaSeleccionada = jTableAlumnos.getSelectedRow();
        if (filaSeleccionada != -1) {
            cargarTablaMateriasNoCursadas(extraerIdAlumnoDeTabla());
            btnInscribir.setVisible(true);
            btnAnularInscripcion.setVisible(false);
            btnGuardarNota.setVisible(false);
            jTextFieldNota.setVisible(false);
        }

    }//GEN-LAST:event_btnNoInscriptasMouseClicked

    private void jTableAlumnosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableAlumnosMouseClicked
        // TODO add your handling code here:
        if (InscApretado) {
            int filaSeleccionada = jTableAlumnos.getSelectedRow();
            if (filaSeleccionada != -1) {
                cargarTablaMateriasCursadas(extraerIdAlumnoDeTabla());
                btnInscribir.setVisible(false);
                btnAnularInscripcion.setVisible(true);
            }
        } else if (noInscApretado) {
            int filaSeleccionada = jTableAlumnos.getSelectedRow();
            if (filaSeleccionada != -1) {
                cargarTablaMateriasNoCursadas(extraerIdAlumnoDeTabla());
                btnInscribir.setVisible(true);
                btnAnularInscripcion.setVisible(false);
            }
        }
    }//GEN-LAST:event_jTableAlumnosMouseClicked

    private void btnNoInscriptasMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNoInscriptasMouseEntered

        if (InscApretado) {
            mouseEntered(btnNoInscriptas);
        }

    }//GEN-LAST:event_btnNoInscriptasMouseEntered

    private void btnNoInscriptasMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNoInscriptasMouseExited
        if (InscApretado) {
            mouseExited(btnNoInscriptas);
        }
    }//GEN-LAST:event_btnNoInscriptasMouseExited

    private void btnInscriptasMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnInscriptasMouseEntered
        if (noInscApretado) {
            mouseEntered(btnInscriptas);
        }
    }//GEN-LAST:event_btnInscriptasMouseEntered

    private void btnInscriptasMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnInscriptasMouseExited
        if (noInscApretado) {
            mouseExited(btnInscriptas);
        }
    }//GEN-LAST:event_btnInscriptasMouseExited

    private void jTableMateriasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMateriasMouseClicked
        int filaSeleccionada = jTableMaterias.getSelectedRow();
        if (filaSeleccionada != -1) {
            jTextFieldNota.setText(String.valueOf(jTableMaterias.getValueAt(filaSeleccionada, 3)));
        }
    }//GEN-LAST:event_jTableMateriasMouseClicked

    private void jTableMateriasPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTableMateriasPropertyChange
        // TODO add your handling code here:

    }//GEN-LAST:event_jTableMateriasPropertyChange

    private void btnInscribirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnInscribirMouseClicked
        int filaSeleccionada = jTableMaterias.getSelectedRow();

        if (filaSeleccionada != -1) {
            Inscripcion inscripcion = new Inscripcion();
            inscripcion.setAlumno(alumnoData.buscarAlumno(extraerIdAlumnoDeTabla()));
            inscripcion.setMateria(materiaData.buscarMateriaNombre(extraerNombreMateriaDeTabla()));
            inscripcionData.guardarInscripcion(inscripcion);
        } else {
            JOptionPane.showMessageDialog(this, "Debe seleccionar una Materia");
        }

        cargarTablaMateriasNoCursadas(extraerIdAlumnoDeTabla());
    }//GEN-LAST:event_btnInscribirMouseClicked

    private void btnInscribirMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnInscribirMouseEntered
        mouseEntered(btnInscribir);
    }//GEN-LAST:event_btnInscribirMouseEntered

    private void btnInscribirMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnInscribirMouseExited
        mouseExited(btnInscribir);
    }//GEN-LAST:event_btnInscribirMouseExited

    private void btnAnularInscripcionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAnularInscripcionMouseClicked
        int filaSeleccionada = jTableMaterias.getSelectedRow();

        if (filaSeleccionada != -1) {
            eliminarInscripcion(extraerIdInscripcionDeTabla());
            cargarTablaMateriasCursadas(extraerIdAlumnoDeTabla());
            btnAnularInscripcion.setVisible(false);
        } else {
            JOptionPane.showMessageDialog(this, "Debe seleccionar una Materia");
        }
    }//GEN-LAST:event_btnAnularInscripcionMouseClicked

    private void btnAnularInscripcionMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAnularInscripcionMouseEntered
        mouseEntered(btnAnularInscripcion);
    }//GEN-LAST:event_btnAnularInscripcionMouseEntered

    private void btnAnularInscripcionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAnularInscripcionMouseExited
        mouseExited(btnAnularInscripcion);
    }//GEN-LAST:event_btnAnularInscripcionMouseExited

    private void btnGuardarNotaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarNotaMouseClicked
        try {
            int filaSeleccionada = jTableMaterias.getSelectedRow();
            if (filaSeleccionada != -1) {
                inscripcionData.actualizarNota((Integer) jTableMaterias.getValueAt(filaSeleccionada, 0), Integer.parseInt(jTextFieldNota.getText()));
                jTextFieldNota.setText("");
                cargarTablaMateriasCursadas(extraerIdAlumnoDeTabla());
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Ingrese un valor 'Nota' correcto");
            jTextFieldNota.setText("");
        }

    }//GEN-LAST:event_btnGuardarNotaMouseClicked

    private void btnGuardarNotaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarNotaMouseEntered
        mouseEntered(btnGuardarNota);
    }//GEN-LAST:event_btnGuardarNotaMouseEntered

    private void btnGuardarNotaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarNotaMouseExited
        mouseExited(btnGuardarNota);
    }//GEN-LAST:event_btnGuardarNotaMouseExited

    private void jTextFieldNotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNotaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNotaActionPerformed

    private void jTextFieldNotaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNotaKeyTyped


       
    }//GEN-LAST:event_jTextFieldNotaKeyTyped

    //------------------------------------------------------------------------------------------------

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnAnularInscripcion;
    private javax.swing.JLabel btnGuardarNota;
    private javax.swing.JLabel btnInscribir;
    private javax.swing.JLabel btnInscriptas;
    private javax.swing.JLabel btnNoInscriptas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableAlumnos;
    private javax.swing.JTable jTableMaterias;
    private javax.swing.JTextField jTextFieldNota;
    // End of variables declaration//GEN-END:variables

    public void armarCabeceraMaterias() {
        modeloTablaMateria.addColumn("Id Inscripcion");
        modeloTablaMateria.addColumn("Materia");
        modeloTablaMateria.addColumn("Año");
        modeloTablaMateria.addColumn("Nota");
        jTableMaterias.setModel(modeloTablaMateria);
    }

    public void armarCabeceraAlumnos() {
        modeloTablaAlumnos.addColumn("ID");
        modeloTablaAlumnos.addColumn("Nombre");
        modeloTablaAlumnos.addColumn("Apellido");
        modeloTablaAlumnos.addColumn("DNI");
        jTableAlumnos.setModel(modeloTablaAlumnos);
    }

    public void borrarFilasMateria() {
        int f = jTableMaterias.getRowCount() - 1; // CANTIDAD DE FILAS MENOS UNO
        for (; f >= 0; f--) {
            modeloTablaMateria.removeRow(f);
        }
    }

    public void borrarFilasAlumno() {
        int f = jTableAlumnos.getRowCount() - 1; // CANTIDAD DE FILAS MENOS UNO
        for (; f >= 0; f--) {
            modeloTablaAlumnos.removeRow(f);
        }
    }

    private void cargarTablaMateriasCursadas(int idAlumno) {
        borrarFilasMateria();
        for (Inscripcion inscripcion : inscripcionData.obtenerInscripcionesPorAlumno(idAlumno)) {
            modeloTablaMateria.addRow(new Object[]{
                inscripcion.getIdInscripcion(),
                inscripcion.getMateria().getNombreMateria(),
                inscripcion.getMateria().getAnio(),
                inscripcion.getNota()});
        }
    }

    private void cargarTablaMateriasNoCursadas(int idAlumno) {
        borrarFilasMateria();
        for (Materia materia : inscripcionData.obtenerMateriasNoCursadas(idAlumno)) {
            modeloTablaMateria.addRow(new Object[]{
                null,
                materia.getNombreMateria(),
                materia.getAnio(),
                null
            });
        }
    }

    private void cargarTablaAlumnos() {
        borrarFilasAlumno();
        for (Alumno alumno : alumnoData.listarAlumnos()) {
            modeloTablaAlumnos.addRow(new Object[]{
                alumno.getIdAlumno(),
                alumno.getNombre(),
                alumno.getApellido(),
                alumno.getDni()});
        }
    }

    private void eliminarInscripcion(int idInscripcion) {
        int filaSeleccionada = jTableMaterias.getSelectedRow();
        if (filaSeleccionada != -1) {
            idInscripcion = (Integer) jTableMaterias.getValueAt(filaSeleccionada, 0);
            inscripcionData.borrarInscripcionMateriaAlumno(idInscripcion);
        } else {
            JOptionPane.showMessageDialog(this, "Debe seleccionar una fila");
        }
    }

    public int extraerIdAlumnoDeTabla() {
        int filaSeleccionada = jTableAlumnos.getSelectedRow();
        int idAlumno = 0;
        if (filaSeleccionada != -1) {
            idAlumno = (Integer) jTableAlumnos.getValueAt(filaSeleccionada, 0);
        }
        return idAlumno;
    }

    public int extraerIdInscripcionDeTabla() {
        int filaSeleccionada = jTableMaterias.getSelectedRow();
        int idInscripcion = 0;
        if (filaSeleccionada != -1) {
            idInscripcion = (Integer) jTableMaterias.getValueAt(filaSeleccionada, 0);
        }
        return idInscripcion;
    }

    public String extraerNombreMateriaDeTabla() {
        int filaSeleccionada = jTableMaterias.getSelectedRow();
        String nombreMateria = null;
        if (filaSeleccionada != -1) {
            nombreMateria = jTableMaterias.getValueAt(filaSeleccionada, 1).toString();
        }
        return nombreMateria;
    }

    //------------------- Animacion botones celestes -----------------------
    private void mouseEntered(JLabel btn) {
        btn.setBackground(Color.decode("#0096ce"));

        Point location = btn.getLocation(); // Obtener la posición actual de la etiqueta

        int w = btn.getWidth();
        int h = btn.getHeight();

        // Calcular las nuevas coordenadas para mantener la etiqueta centrada
        int newX = location.x - 1;
        int newY = location.y - 1;

        // Aumentar el tamaño de la etiqueta manteniendo su posición
        btn.setBounds(newX, newY, w + 3, h + 3);

    }

    private void mouseExited(JLabel btn) {
        btn.setBackground(Color.decode("#5AB8E9"));

        int w = btn.getWidth();
        int h = btn.getHeight();

        // Obtener la posición actual de la etiqueta
        Point location = btn.getLocation();

        // Calcular las nuevas coordenadas para mantener la etiqueta centrada
        int newX = location.x + 1;
        int newY = location.y + 1;

        // Aumentar el tamaño de la etiqueta manteniendo su posición
        btn.setBounds(newX, newY, w - 3, h - 3);
    }

}
